#!/usr/bin/env nextflow

/*
 * -------------------------------------------------
 *  iraiosub/riboseq-flow config file
 * -------------------------------------------------
 * Main config
 */


// Main parameters
params {
  // General
  input = './samplesheet.csv'
  outdir = './results'
  tracedir = "${params.outdir}/pipeline_info"
  publish_dir_mode = 'copy'
  // Optional genome files
  star_index = null
  org_name = null
  transcript_info = null
  transcript_fasta = null

}

// Enable by default nextflow tracing and place in trace dir location
timeline {
  enabled = true
  overwrite = true
  file = "${params.tracedir}/execution_timeline.html"
}
report {
  enabled = true
  overwrite = true
  file = "${params.tracedir}/execution_report.html"
}
trace {
  enabled = true
  overwrite = true
  file = "${params.tracedir}/execution_trace.txt"
  fields = "task_id,hash,native_id,name,status,exit,submit,start,complete,duration,realtime,cpus,time,memory,%cpu,peak_rss,peak_vmem,rchar,wchar"
}
dag {
  enabled = true
  overwrite = true
  file = "${params.tracedir}/pipeline_dag.svg"
}

// Include other configs
includeConfig 'conf/genomes.config'
includeConfig 'conf/defaults.config'
includeConfig 'conf/modules.config'


// Create run profiles
profiles {
  test { includeConfig 'conf/test.config' }
  full_test { includeConfig 'conf/full_test.config' }
  github { includeConfig 'conf/github.config' }
  crick { includeConfig 'conf/crick.config' }
  conda { enabled = false } // change this path to conda dir on your system
  singularity { 
    singularity.enabled = true
    singularity.autoMounts = true
    runOptions = "--bind $PWD"
    conda.enabled = false
    docker.enabled = false 
  }
  docker { 
    singularity.enabled = false
    conda.enabled = false
    docker.enabled = true
    docker.userEmulation = true 
  }
  apptainer {
    apptainer.enabled       = true
    apptainer.autoMounts    = true
    conda.enabled           = false
    docker.enabled          = false
    singularity.enabled     = false
  }
}

// Export these variables to prevent local Python/R libraries from conflicting with those in the container
env {
    PYTHONNOUSERSITE = 1
    R_PROFILE_USER   = "/.Rprofile"
    R_ENVIRON_USER   = "/.Renviron"
}


// profiles {
//   withConda { process.conda = '/env.yml'  }
// }